# The enviroment setting is what you'll see on the main Web UI for the ENVIRONMENT name.
# The sharedSecret is not a k8s Secret it is what the coordinator and worker will use
# to confirm internal communications. More can be found in the SEP doc on this.
environment: test

# starburstPlatformLicense: starburstdata
starburstPlatformLicense: mylicense

# Secure internal communication (Coordinator and Workers): https://docs.starburst.io/latest/security/internal-communication.html#configure-shared-secret
sharedSecret: BRycMKsTJC8lUB9vBCqeXaRwc97LUfVAx1FkcnXubGsg/ZXbkHOsSuiHtYYsm3BeQMq5NA9FPgejNBzzX7z3HQ==

# As a starting best practice always set the requests and limits memmory and CPU to the same thing.
coordinator:
  resources:
    requests:
      memory: "8Gi"
      cpu: 3
    limits:
      memory: "8Gi"

  # This affinity will ensure the coordinator and worker are deployed in the sep node group.
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: apps
  #           operator: In
  #           values: 
  #           - sep

  # tolerations:
  #   - key: "kubernetes.azure.com/scalesetpriority"
  #     operator: "Equal"
  #     value: "spot"
  #     effect: "NoSchedule"

  etcFiles:
    properties:
      log.properties: |
        io.trino=DEBUG
  
  additionalProperties: |
    # tls config
    http-server.authentication.allow-insecure-over-http=true
    http-server.process-forwarded=true
    # end tls
    # biac - users here are an example
    starburst.access-control.enabled=true
    starburst.access-control.authorized-users=starburst_service, sbe_admin, user1, user2
    starburst.access-control.audit.enabled=true
    starburst.audit.access-log.enabled=true
    # end-biac
    # Insights config start
    # comment insights.authorized.* when using BIAC
    # insights.authorized-users=starburst_service, user1
    # insights.authorized-users=^sa.*|starburst_service
    # insights.authorized-groups=SEPAdmins|SEPUsers

    insights.persistence-enabled=true 
    insights.metrics-persistence-enabled=true
    # insights.jdbc.url=jdbc:postgresql://<postgres-host>:5432/<postgres db>
    # insights.jdbc.user=<postgres-user>
    # insights.jdbc.password=<postgres-pw>

    insights.jdbc.url=jdbc:mysql://sqlf-eus-sccspoc-dev.mysql.database.azure.com:3306/sqdb-trino-eus-sccspoc-dev?sessionVariables=sql_mode=ANSI
    insights.jdbc.user=sccrpocmysql
    insights.jdbc.password=D4_RR_DQUoE1ir

    insights.metrics-collection-interval=15s
    insights.metrics-persistence-interval=60s
    # Insights config end

worker:
  replicas: 1
  # The deploymentTerminatinoGracePeriodSeconds controls how long the worker waits before beginning the graceful shutdown process.
  # The following values were lowered from their defautls for lab settings so when you run a helm upgrade or scale down it doesn't take so long. 
  deploymentTerminationGracePeriodSeconds: 5 # default is 300; it is actually how long the graceful shutdown waits after it receives the SIGTERM
  starburstWorkerShutdownGracePeriodSeconds: 5 # default is 120
  resources:
    requests:
      memory: "8Gi"
      cpu: 3
    limits:
      memory: "8Gi"

  # This affinity will ensure the coordinator and worker are deployed in the sep node group.
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: apps
  #           operator: In
  #           values: 
  #           - sep

  # tolerations:
  #   - key: "kubernetes.azure.com/scalesetpriority"
  #     operator: "Equal"
  #     value: "spot"
  #     effect: "NoSchedule"

# Temporary database for user and password. This should be changed to a more robust authentication (ldap, ouauh, okta, etc)
userDatabase:
  enabled: true
  users:
     - username: admin
       password: StarburstR0cks!
     - username: starburst
       password: StarburstR0cks!
     - username: starburst_service
       password: StarburstR0cks!
     - username: caching_service
       password: StarburstR0cks!
     - username: dataproducts_service
       password: StarburstR0cks!
     - username: analyst
       password: StarburstR0cks!
     - username: katie
       password: StarburstR0cks!
     - username: erin
       password: StarburstR0cks!
     - username: aaron
       password: StarburstR0cks!
     - username: john
       password: StarburstR0cks!
     - username: jon
       password: StarburstR0cks!

# # Expose the cluster as Ingress using infrastructure provided by Azure
# expose:
#   type: "ingress"
#   ingress:
#     annotations:
#       cert-manager.io/cluster-issuer: acme
#       kubernetes.io/ingress.class: addon-http-application-routing
#     # The host name below must be unique in the DNS domain you are entering it into.
#     # Will use Azure's DNS from the k8s configuration
#     host: sbe-fab-pimentel-lab01.08554bb9b4624f7ca07d.eastus.aksapp.io
#     ingressName: "starburst-ingress"
#     serviceName: "starburst"
#     servicePort: 8080
#     ingressClassName:
#     tls:
#       enabled: true
#       secretName: tls-secret-starburst
#     path: "/"
#     pathType: Prefix

expose:
  type: "loadBalancer"
  loadBalancer:
    name: "starburst"
    ports:
      http:
        port: 8080
# If you want the LB to have an internal IP and not a public facing one remove the comment below for the annoticatios line and the line for your cloud.
    annotations: 
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    #  service.beta.kubernetes.io/aws-load-balancer-internal: "true"      
    #  networking.gke.io/load-balancer-type: "Internal"